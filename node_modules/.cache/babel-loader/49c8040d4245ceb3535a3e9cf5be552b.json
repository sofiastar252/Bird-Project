{"ast":null,"code":"var _jsxFileName = \"/Users/safia/Desktop/Visual Studio Code/react-express-in-one-project-master copy 2/src/FunFactsForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './FunFactsForm.css'; // Import CSS so question & answer boxes can be styled\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FunFactsForm = _ref => {\n  _s();\n  let {\n    onSubmit\n  } = _ref;\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(null);\n  const [answer, setAnswer] = useState('');\n  const [correctAnswer, setCorrectAnswer] = useState('');\n  const [feedback, setFeedback] = useState('');\n  const [feedbackColor, setFeedbackColor] = useState('');\n  useEffect(() => {\n    fetchQuestions();\n  }, []);\n  const fetchQuestions = async () => {\n    try {\n      const response = await axios.get('https://raw.githubusercontent.com/safiaabukasim/BirdQues/main/questions.json');\n      const data = response.data;\n      setQuestions(data);\n      setCurrentQuestionIndex(Math.floor(Math.random() * data.length)); // Set a random question index\n      setFeedback(''); // Clear previous feedback\n    } catch (error) {\n      console.error('Error fetching questions:', error);\n    }\n  };\n  const generateRandomQuestion = () => {\n    setCurrentQuestionIndex(Math.floor(Math.random() * questions.length)); // Set a new random question index\n    setFeedback(''); // Clear previous feedback\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const userAnswer = answer.toLowerCase().trim(); // Convert user's answer to lowercase and trim whitespace\n    const correctAnswer = questions[currentQuestionIndex].answer.toLowerCase().trim(); // Get correct answer for the current question\n    let answerStatus = '';\n    if (userAnswer === correctAnswer) {\n      setFeedback('Correct!');\n      setFeedbackColor('green');\n      onSubmit(questions[currentQuestionIndex].question, answer, true); // Correct answer\n      answerStatus = 'Correct';\n    } else {\n      setFeedback('Incorrect! Try again.');\n      setFeedbackColor('red');\n      onSubmit(questions[currentQuestionIndex].question, answer, false); // Incorrect answer\n      answerStatus = 'Incorrect';\n    }\n\n    // Send form data to Formspree endpoint for email submission\n    const formData = new FormData();\n    formData.append('question', questions[currentQuestionIndex].question);\n    formData.append('user_answer', answer);\n    formData.append('answer_status', answerStatus); // Include answer status in form data\n\n    try {\n      const response = await fetch('https://formspree.io/f/xoqgyeaw', {\n        method: 'POST',\n        body: formData\n      });\n      const data = await response.json();\n      console.log(data); // Log the response from Formspree\n    } catch (error) {\n      console.error('Error sending form data:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fun-facts-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"See If You Know This Fun Fact!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: generateRandomQuestion,\n        children: \"Generate Random Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), currentQuestionIndex !== null && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Question:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: questions[currentQuestionIndex].question,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Answer:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: answer,\n            onChange: e => setAnswer(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit Answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), feedback && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"feedback\",\n      style: {\n        color: feedbackColor\n      },\n      children: feedback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(FunFactsForm, \"vsElB/6xSweB5H1m6mqmY5PTNjM=\");\n_c = FunFactsForm;\nexport default FunFactsForm;\nvar _c;\n$RefreshReg$(_c, \"FunFactsForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","FunFactsForm","onSubmit","questions","setQuestions","currentQuestionIndex","setCurrentQuestionIndex","answer","setAnswer","correctAnswer","setCorrectAnswer","feedback","setFeedback","feedbackColor","setFeedbackColor","fetchQuestions","response","get","data","Math","floor","random","length","error","console","generateRandomQuestion","handleSubmit","e","preventDefault","userAnswer","toLowerCase","trim","answerStatus","question","formData","FormData","append","fetch","method","body","json","log","target","value","color"],"sources":["/Users/safia/Desktop/Visual Studio Code/react-express-in-one-project-master copy 2/src/FunFactsForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './FunFactsForm.css'; // Import CSS so question & answer boxes can be styled\n\nconst FunFactsForm = ({ onSubmit }) => {\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(null);\n  const [answer, setAnswer] = useState('');\n  const [correctAnswer, setCorrectAnswer] = useState('');\n  const [feedback, setFeedback] = useState('');\n  const [feedbackColor, setFeedbackColor] = useState('');\n\n  useEffect(() => {\n    fetchQuestions();\n  }, []);\n\n  const fetchQuestions = async () => {\n    try {\n      const response = await axios.get('https://raw.githubusercontent.com/safiaabukasim/BirdQues/main/questions.json');\n      const data = response.data;\n      setQuestions(data);\n      setCurrentQuestionIndex(Math.floor(Math.random() * data.length)); // Set a random question index\n      setFeedback(''); // Clear previous feedback\n    } catch (error) {\n      console.error('Error fetching questions:', error);\n    }\n  };\n\n  const generateRandomQuestion = () => {\n    setCurrentQuestionIndex(Math.floor(Math.random() * questions.length)); // Set a new random question index\n    setFeedback(''); // Clear previous feedback\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const userAnswer = answer.toLowerCase().trim(); // Convert user's answer to lowercase and trim whitespace\n    const correctAnswer = questions[currentQuestionIndex].answer.toLowerCase().trim(); // Get correct answer for the current question\n    let answerStatus = '';\n\n    if (userAnswer === correctAnswer) {\n      setFeedback('Correct!');\n      setFeedbackColor('green');\n      onSubmit(questions[currentQuestionIndex].question, answer, true); // Correct answer\n      answerStatus = 'Correct';\n    } else {\n      setFeedback('Incorrect! Try again.');\n      setFeedbackColor('red');\n      onSubmit(questions[currentQuestionIndex].question, answer, false); // Incorrect answer\n      answerStatus = 'Incorrect';\n    }\n\n    // Send form data to Formspree endpoint for email submission\n    const formData = new FormData();\n    formData.append('question', questions[currentQuestionIndex].question);\n    formData.append('user_answer', answer);\n    formData.append('answer_status', answerStatus); // Include answer status in form data\n\n    try {\n      const response = await fetch('https://formspree.io/f/xoqgyeaw', {\n        method: 'POST',\n        body: formData,\n      });\n      const data = await response.json();\n      console.log(data); // Log the response from Formspree\n    } catch (error) {\n      console.error('Error sending form data:', error);\n    }\n  };\n\n  return (\n    <div className=\"fun-facts-form\">\n      <h2>See If You Know This Fun Fact!</h2>\n      <form onSubmit={handleSubmit}>\n        <button type=\"button\" onClick={generateRandomQuestion}>\n          Generate Random Question\n        </button>\n        {currentQuestionIndex !== null && (\n          <>\n            <label>\n              Question:\n              <input type=\"text\" value={questions[currentQuestionIndex].question} readOnly />\n            </label>\n            <label>\n              Answer:\n              <input\n                type=\"text\"\n                value={answer}\n                onChange={(e) => setAnswer(e.target.value)}\n              />\n            </label>\n            <button type=\"submit\">Submit Answer</button>\n          </>\n        )}\n      </form>\n      {feedback && <p className=\"feedback\" style={{ color: feedbackColor }}>{feedback}</p>}\n    </div>\n  );\n};\n\nexport default FunFactsForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}