{"ast":null,"code":"var _jsxFileName = \"/Users/safia/Desktop/Visual Studio Code/react-express-in-one-project-master copy 4/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [audioFiles] = useState([{\n    name: 'Blue Jay',\n    path: '/bluejay.mp3'\n  }, {\n    name: 'Jungle',\n    path: '/jungle.mp3'\n  }, {\n    name: 'Mourning Dove',\n    path: '/mourningdove.mp3'\n  }, {\n    name: 'Nature',\n    path: '/nature.mp3'\n  }, {\n    name: 'Rainforest',\n    path: '/rainforest.mp3'\n  }, {\n    name: 'Raven',\n    path: '/raven.mp3'\n  }]);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [audioSrc, setAudioSrc] = useState(null);\n  const [audioDuration, setAudioDuration] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const handleFileSelect = fileName => {\n    setSelectedFile(fileName);\n    setAudioSrc(fileName);\n  };\n  useEffect(() => {\n    if (audioSrc) {\n      const audio = new Audio(audioSrc);\n      audio.addEventListener('loadedmetadata', () => {\n        setAudioDuration(audio.duration);\n      });\n      if (isPlaying) {\n        audio.play();\n      } else {\n        audio.pause();\n      }\n    }\n  }, [audioSrc, isPlaying]);\n  const handleTogglePlay = () => {\n    setIsPlaying(!isPlaying);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: audioFiles.map((audioFile, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleFileSelect(audioFile.path),\n          children: audioFile.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), selectedFile && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n        controls: true,\n        src: audioSrc,\n        type: \"audio/mp3\",\n        onPlay: () => setIsPlaying(true),\n        onPause: () => setIsPlaying(false),\n        children: \"Your browser does not support the audio element.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Exact Duration: \", audioDuration.toFixed(2), \" seconds\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleTogglePlay,\n        children: isPlaying ? 'Pause' : 'Play'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"syTYm66GBq0hn/kk1BwKO2wZtFU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","App","audioFiles","name","path","selectedFile","setSelectedFile","audioSrc","setAudioSrc","audioDuration","setAudioDuration","isPlaying","setIsPlaying","handleFileSelect","fileName","audio","Audio","addEventListener","duration","play","pause","handleTogglePlay","map","audioFile","index","toFixed"],"sources":["/Users/safia/Desktop/Visual Studio Code/react-express-in-one-project-master copy 4/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  const [audioFiles] = useState([\n    { name: 'Blue Jay', path: '/bluejay.mp3' },\n    { name: 'Jungle', path: '/jungle.mp3' },\n    { name: 'Mourning Dove', path: '/mourningdove.mp3' },\n    { name: 'Nature', path: '/nature.mp3' },\n    { name: 'Rainforest', path: '/rainforest.mp3' },\n    { name: 'Raven', path: '/raven.mp3' },\n  ]);\n\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [audioSrc, setAudioSrc] = useState(null);\n  const [audioDuration, setAudioDuration] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  const handleFileSelect = (fileName) => {\n    setSelectedFile(fileName);\n    setAudioSrc(fileName);\n  };\n\n  useEffect(() => {\n    if (audioSrc) {\n      const audio = new Audio(audioSrc);\n      audio.addEventListener('loadedmetadata', () => {\n        setAudioDuration(audio.duration);\n      });\n      if (isPlaying) {\n        audio.play();\n      } else {\n        audio.pause();\n      }\n    }\n  }, [audioSrc, isPlaying]);\n\n  const handleTogglePlay = () => {\n    setIsPlaying(!isPlaying);\n  };\n\n  return (\n    <div>\n      <ul>\n        {audioFiles.map((audioFile, index) => (\n          <li key={index}>\n            <button onClick={() => handleFileSelect(audioFile.path)}>\n              {audioFile.name}\n            </button>\n          </li>\n        ))}\n      </ul>\n      {selectedFile && (\n        <div>\n          <audio\n            controls\n            src={audioSrc}\n            type=\"audio/mp3\"\n            onPlay={() => setIsPlaying(true)}\n            onPause={() => setIsPlaying(false)}\n          >\n            Your browser does not support the audio element.\n          </audio>\n          <p>Exact Duration: {audioDuration.toFixed(2)} seconds</p>\n          <button onClick={handleTogglePlay}>{isPlaying ? 'Pause' : 'Play'}</button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}